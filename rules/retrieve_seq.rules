"""This rule retrieves sequences for a given gene set"""

################################################################
## retrieve_seq rule (will later be moved in a separate rule file).
if not "organism" in config.keys():
    sys.exit("The organism must be defined in the config file")

if not "retrieve_seq" in config.keys():
    config["retrieve_seq"] = {}

if not "type" in config["retrieve_seq"].keys():
    config["retrieve_seq"]["type"] = "upstream"

if not "feattype" in config["retrieve_seq"].keys():
    config["retrieve_seq"]["feattype"] = "gene"

if not "from" in config["retrieve_seq"].keys():
    config["retrieve_seq"]["from"] = "default"

if not "to" in config["retrieve_seq"].keys():
    config["retrieve_seq"]["to"] = "default"

if not "rm" in config["retrieve_seq"].keys():
    config["retrieve_seq"]["rm"] = ""

if not "suffix" in config["retrieve_seq"].keys():
     config["retrieve_seq"]["suffix"] = \
         "_" + config["retrieve_seq"]["type"] \
         + "_" + config["retrieve_seq"]["feattype"] \
         + "_from" + str(config["retrieve_seq"]["from"]) \
         + "_to" + str(config["retrieve_seq"]["to"])  \
         + config["retrieve_seq"]["rm"] 

rule retrieve_seq:
    """Retrieve regulatory sequences for a set of genes (gene cluster)
    specified in a text file.  The gene cluster file is a text file,
    where the first word of each line corresponds to a gene ID or
    name.
    """
    input: "{genes}.txt"
    output: "{genes}" + config["retrieve_seq"]["suffix"] + ".fna"
    message: "Retrieving sequences of {gene_cluster}"
    params: \
            organism = config["organism"], \ 
            region_type = config["retrieve_seq"]["type"], \ 
            feattype = config["retrieve_seq"]["feattype"], \ 
            seq_from = str(config["retrieve_seq"]["from"]), \ 
            seq_to = str(config["retrieve_seq"]["to"]), \ 
            qsub=config["qsub"] \
            + " -e " + config["retrieve_seq"]["suffix"] + "_qsub.err" \
            + " -o " + config["retrieve_seq"]["suffix"] + "_qsub.out"
    shell: "retrieve-seq" \
           + " -org {params.organism} -type {params.region_type} -feattype {params.feattype}" \
           + " -from {params.seq_from} -to {params.seq_to} -noorf " \
           + " -label id,name,organism_name " \
           + " -i  {input} -o {output}"
